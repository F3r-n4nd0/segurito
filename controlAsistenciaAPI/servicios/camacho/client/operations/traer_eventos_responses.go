// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "controlAsistenciaAPI/servicios/camacho/models"
)

// TraerEventosReader is a Reader for the TraerEventos structure.
type TraerEventosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TraerEventosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTraerEventosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTraerEventosBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTraerEventosOK creates a TraerEventosOK with default headers values
func NewTraerEventosOK() *TraerEventosOK {
	return &TraerEventosOK{}
}

/*TraerEventosOK handles this case with default header values.

lista eventos del usuario
*/
type TraerEventosOK struct {
	Payload []*models.Eventos
}

func (o *TraerEventosOK) Error() string {
	return fmt.Sprintf("[GET /eventos/{id_usuario}][%d] traerEventosOK  %+v", 200, o.Payload)
}

func (o *TraerEventosOK) GetPayload() []*models.Eventos {
	return o.Payload
}

func (o *TraerEventosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTraerEventosBadRequest creates a TraerEventosBadRequest with default headers values
func NewTraerEventosBadRequest() *TraerEventosBadRequest {
	return &TraerEventosBadRequest{}
}

/*TraerEventosBadRequest handles this case with default header values.

bad input parameter
*/
type TraerEventosBadRequest struct {
}

func (o *TraerEventosBadRequest) Error() string {
	return fmt.Sprintf("[GET /eventos/{id_usuario}][%d] traerEventosBadRequest ", 400)
}

func (o *TraerEventosBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
