// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "camachoAPI/api/models"
)

// TraerEventosOKCode is the HTTP code returned for type TraerEventosOK
const TraerEventosOKCode int = 200

/*TraerEventosOK lista eventos del usuario

swagger:response traerEventosOK
*/
type TraerEventosOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Eventos `json:"body,omitempty"`
}

// NewTraerEventosOK creates TraerEventosOK with default headers values
func NewTraerEventosOK() *TraerEventosOK {

	return &TraerEventosOK{}
}

// WithPayload adds the payload to the traer eventos o k response
func (o *TraerEventosOK) WithPayload(payload []*models.Eventos) *TraerEventosOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the traer eventos o k response
func (o *TraerEventosOK) SetPayload(payload []*models.Eventos) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TraerEventosOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Eventos, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// TraerEventosBadRequestCode is the HTTP code returned for type TraerEventosBadRequest
const TraerEventosBadRequestCode int = 400

/*TraerEventosBadRequest bad input parameter

swagger:response traerEventosBadRequest
*/
type TraerEventosBadRequest struct {
}

// NewTraerEventosBadRequest creates TraerEventosBadRequest with default headers values
func NewTraerEventosBadRequest() *TraerEventosBadRequest {

	return &TraerEventosBadRequest{}
}

// WriteResponse to the client
func (o *TraerEventosBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
