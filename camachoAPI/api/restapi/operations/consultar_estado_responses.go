// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ConsultarEstadoOKCode is the HTTP code returned for type ConsultarEstadoOK
const ConsultarEstadoOKCode int = 200

/*ConsultarEstadoOK estado actual del usuario

swagger:response consultarEstadoOK
*/
type ConsultarEstadoOK struct {

	/*
	  In: Body
	*/
	Payload *ConsultarEstadoOKBody `json:"body,omitempty"`
}

// NewConsultarEstadoOK creates ConsultarEstadoOK with default headers values
func NewConsultarEstadoOK() *ConsultarEstadoOK {

	return &ConsultarEstadoOK{}
}

// WithPayload adds the payload to the consultar estado o k response
func (o *ConsultarEstadoOK) WithPayload(payload *ConsultarEstadoOKBody) *ConsultarEstadoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consultar estado o k response
func (o *ConsultarEstadoOK) SetPayload(payload *ConsultarEstadoOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsultarEstadoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConsultarEstadoBadRequestCode is the HTTP code returned for type ConsultarEstadoBadRequest
const ConsultarEstadoBadRequestCode int = 400

/*ConsultarEstadoBadRequest bad input parameter

swagger:response consultarEstadoBadRequest
*/
type ConsultarEstadoBadRequest struct {
}

// NewConsultarEstadoBadRequest creates ConsultarEstadoBadRequest with default headers values
func NewConsultarEstadoBadRequest() *ConsultarEstadoBadRequest {

	return &ConsultarEstadoBadRequest{}
}

// WriteResponse to the client
func (o *ConsultarEstadoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
